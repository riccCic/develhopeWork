package javabasics._17;

import java.time.*;


public class main {
    public static void main(String[] args) {
        exercise1();
        exercise3();
    }

    /**
     * 1: Write code and fix the program below, you want to accept the questionableFunds
     * into the account!
     */
    private static void exercise1() {
        System.out.println("Exercise 1: ");
        int myBankBalanceEuro = 500;

        String suspiciousEmailMessage =
                """
                                    Hello Sir/Madam,
                                    
                                    I'm a prince here in [redacted] and I need help transferring my billions into 
                                    Italy, please provide your bank account details and I will pay you generously.
                                    
                                    Thanks
                        """;

        long questionableFundsEuro = 5_000_000_000L;

        //Add the questionable funds to your bank balance and print it out!
           // long CambioIntInLong = myBankBalanceEuro;
            long sommaDenaro = questionableFundsEuro + myBankBalanceEuro; //-> creun int che sommi i 2 conti,
        System.out.println(sommaDenaro);                                  // e poi li stampo
        }


    /**
     * 2: Given the following information, think about the MOST EFFICIENT (which uses least space)
     *    type to use to store such data. Why is this the most efficient?
     *
     *    long = -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807
     *    double = 16 decimal places
     *    float = 7 decimal places
     *    int = -2,147,483,648 to 2,147,483,647
     *    short = -32,768 to 32,768
     *    byte = -127 to 127
     *
     *    2a: Someone's age  " byte"
     *    2b: The age of a baby in months    "short"
     *    2c: Money in a hedgefund in euros  "int"
     *    2d: Price of a good in euros on amazon.com  "short"
     *    2e: The exact weight of an apple measured by scientific equipment  "double"
     *    2f: The number of kilometers from any 2 places in the world   "short"
     */

    /**
     * 3: Use the LOCALDATE type (LocalDate.now()) to print out the current date
     * <p>
     * Play around with local date! What can you get it to do?
     * Use at least the following methods on myDate().
     * * getDayOfMonth()
     * * getDayOfWeek()
     * * getDayOfYear()
     * * getMonth()
     * * getMonthValue()
     * * use isBefore() and isAfter() to compare with other dates, use LocalDate.of(year, month, day) to
     * create other days
     */
    public static void exercise3() {
        System.out.println("Exercise 3:");

        LocalDate oggi = LocalDate.now();
        System.out.println("Data corrente: " + oggi);

        int giornoDelMese = oggi.getDayOfMonth();
        System.out.println("Giorno del mese: " + giornoDelMese);


        Month meseCorrente = oggi.getMonth();
        System.out.println("Mese corrente: " + meseCorrente);

       // String giornoSettimana = oggi.getDayOfWeek();
        //System.out.println("Giorno corrente: " + giornoSettimana;

        DayOfWeek giornoDellaSettimana = oggi.getDayOfWeek();

        if(giornoDellaSettimana == DayOfWeek.MONDAY) {
            System.out.println("Oggi è lunedì!");
        } else if (giornoDellaSettimana == DayOfWeek.TUESDAY) {
            System.out.println("Oggi  è MARTEDì ");
        }else if (giornoDellaSettimana == DayOfWeek.WEDNESDAY) {
            System.out.println("Oggi  è MERCOLEDì");
        }else if (giornoDellaSettimana == DayOfWeek.THURSDAY) {
            System.out.println("Oggi  è GIOVEDì");
        } else if (giornoDellaSettimana == DayOfWeek.FRIDAY) {
            System.out.println("Oggi  è VENERDì");
        }else if (giornoDellaSettimana == DayOfWeek.SATURDAY) {
            System.out.println("Oggi  è SABATO ");
        }else if (giornoDellaSettimana == DayOfWeek.SUNDAY) {
            System.out.println("Oggi  è DOMENICA");
        }else {
            System.out.println("Oggi non è un giorno della settimana ");
        }

        int anno = oggi.getDayOfYear();
        System.out.println("giorno dell' anno: " + anno);

        int numeroMeseCorrente = oggi.getMonthValue();
        System.out.println("Mese corrente: " + numeroMeseCorrente);



    }
}


